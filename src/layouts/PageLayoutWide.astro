---
import Block from "@components/block/Block.astro";
import BaseLayout from "./BaseLayout.astro";
import HeroImage from "@components/hero/HeroImage.astro";
import HeroPlain from "@components/hero/HeroPlain.astro";

const props = Astro.props;
const {
  title,
  description,
  blocks,
  style,
  thumbnail,
  og_image,
  typewriter, // ðŸ”¥ grab typewriter from props
} = Astro.props;

const contentClass = style.hero_template === "plain" ? "py-0" : "py-20";
const hasBlocks = blocks && blocks.length > 0;
---

<BaseLayout
  {title}
  {description}
  pageClass={style.page_class}
  {thumbnail}
  {og_image}
>
  {
    style.hero_template == "plain" && (
      <HeroPlain {...props}>
        <slot name="hero" />
      </HeroPlain>
    )
  }

  {
    style.hero_template == "image" && (
      <HeroImage {...props}>
        <slot name="hero" />
      </HeroImage>
    )
  }

  <!-- âœ¨ TYPEWRITER SECTION -->
  {
    typewriter && (
      <section class="text-center mt-4">
        <span id="typewriter" class="block text-lg font-medium text-white opacity-80"></span>
        <script is:inline>
          document.addEventListener("DOMContentLoaded", () => {
            const texts = {JSON.stringify(typewriter)};
            let i = 0, j = 0, isDeleting = false;
            const el = document.getElementById("typewriter");

            function type() {
              if (!el) return;
              const current = texts[i];
              el.textContent = current.slice(0, j);
              if (!isDeleting && j < current.length) {
                j++;
              } else if (isDeleting && j > 0) {
                j--;
              } else {
                isDeleting = !isDeleting;
                if (!isDeleting) i = (i + 1) % texts.length;
                setTimeout(type, 800); return;
              }
              setTimeout(type, isDeleting ? 60 : 100);
            }

            type();
          });
        </script>
      </section>
    )
  }

  <div class="relative z-10 w-full" id="more">
    <div
      class={`page__content container-${style.container || 'md'} ${style.content_class || contentClass}`}
    >
      <slot />
      {!hasBlocks && <slot name="nav" />}
    </div>

    {
      hasBlocks && (
        <>
          <div class={style.block_class}>
            {blocks.map((section) => (
              <Block {...section} />
            ))}
          </div>

          <slot name="nav" />
        </>
      )
    }

    <div class="pointer-events-none fixed bottom-0 z-40 w-full">
      <slot name="cart" />
    </div>
  </div>
</BaseLayout>

<style is:global>
  .page__content {
    &:empty {
      display: none;
    }
    &:has(> .richtext:empty) {
      display: none;
    }

    .img,
    iframe {
      width: calc(100% + var(--container-spacing));
      margin-left: calc(var(--spacing) * -1);
      @apply my-10 aspect-video h-auto;
      @screen md {
        width: 100%;
        margin-left: 0;
      }
    }
  }
</style>